#!/usr/bin/env bash
#MIT License
#
#Copyright (c) 2020 Nick Kalgin https://github.com/kalginnick/nvmw
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

while [ -n "$1" ]; do
  case $1 in
  "get")
    GET=$1
    shift
    ;;
  "rm")
    REMOVE=$1
    shift
    ;;
  "npm" | "node")
    EXEC=$1
    shift
    ;;
  "debug")
    DEBUG=$1
    ARGS+=" $1"
    shift
    ;;
  "--proxy" | "-x")
    PROXY=$1
    shift
    URL=$1
    shift
    ;;
  *)
    ARGS+=" $1"
    shift
    ;;
  esac
done

if [ -n "$PROXY" ] && [ -n "$URL" ]; then
  export NVM_NODEJS_ORG_MIRROR=$URL
fi

export NVM_DIR="$(pwd)/.nvm/wrapper"
chmod +x $NVM_DIR/nvm-exec

. $NVM_DIR/nvm.sh

if [ -n "$REMOVE" ]; then
  rm -rf $NVM_DIR/.cache $NVM_DIR/alias $NVM_DIR/versions
elif [ -n "$DEBUG" ]; then
  unset NVM_NODEJS_ORG_MIRROR
  unset NVM_IOJS_ORG_MIRROR
  nvm $ARGS
elif [ -n "$GET" ]; then
  if [ -n "$ARGS" ]; then
    nvm install $ARGS
  else
    nvm install --lts
  fi
elif [ -n "$EXEC" ]; then
  if [ -n "$ARGS" ]; then
    nvm exec $(nvm current) $EXEC $ARGS
  fi
elif [ -n "$ARGS" ]; then
  nvm $ARGS
else
  echo "No command arguments passed. Use 'nvmw -h' to see available nvm commands."
fi
